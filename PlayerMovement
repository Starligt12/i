[RequireComponent(typeof(CharacterController))]
[AddComponentMenu("Control Script/PlayerMovement")]
public class PlayerMovement : MonoBehaviour
{
    public float speed = 5f;
    public float gravity = -9.8f;
    public float jumpHeight = 10f;
    public float sprintSpeed = 15f;
    public float crouchSpeed = 2f;
    public float crouchHeight = 0.5f;
    private bool isCrouching = false;
    public AudioClip footstepSound;
    private CharacterController _charController;
    private AudioSource _audioSource;
   
    void Start()
    {
        _audioSource = GetComponent<AudioSource>();
        _charController = GetComponent<CharacterController>();
        //LoadPlayerPosition();
        transform.position = new Vector3(825, 21, 802);
        
    }

    private void Update()
    {
        float deltaX = Input.GetAxis("Horizontal") * speed;
        float deltaZ = Input.GetAxis("Vertical") * speed;
        Vector3 movement = new Vector3(deltaX, 0, deltaZ);
        movement = Vector3.ClampMagnitude(movement, speed);

        movement.y = gravity;
        movement *= Time.deltaTime;
        movement = transform.TransformDirection(movement);
        _charController.Move(movement);
        
        if (Input.GetKey(KeyCode.W) && _charController.isGrounded)
        {
            if (!_audioSource.isPlaying)
            {
                _audioSource.PlayOneShot(footstepSound);
            }
        }
        else
        {
            _audioSource.Stop();
        }
        if (Input.GetKeyDown(KeyCode.Space)) 
        {
            Jump();
        }
        if (Input.GetKeyDown(KeyCode.LeftShift)) 
        {
            
            speed = sprintSpeed;
        }
        else if (Input.GetKeyUp(KeyCode.LeftShift)) 
        {
            
            speed = 5f;
        }
        
        if (Input.GetKeyDown(KeyCode.C))
        {
           
            if (isCrouching)
            {
                _charController.height = 2f;
                _charController.center = new Vector3(0f, 1f, 0f);
                speed = 5f;
                isCrouching = false;
                
            }
            else
            {
                _charController.height = crouchHeight;
                _charController.center = new Vector3(0f, 0.5f, 0f);
                speed = crouchSpeed;
                isCrouching = true;
                
            }
        }
    }
    void Jump() 
    {
        if (_charController.isGrounded) 
        {
            float jumpVelocity = Mathf.Sqrt(-2 * gravity * jumpHeight);
            _charController.Move(Vector3.up * jumpVelocity * Time.deltaTime);
        }
    }
    
}
